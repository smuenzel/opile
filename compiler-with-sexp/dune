(library
  (name compiler_with_sexp)
  (libraries core compiler_without_sexp)
  (inline_tests)
  (preprocess (pps ppx_expect ppx_jane))
  (flags (:standard -w -30))
  )

(rule
  (target lexing.ml)
  (deps   ../raw-compiler/lexing.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target clambda.ml)
  (deps   ../raw-compiler/clambda.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target freshening.ml)
  (deps   ../raw-compiler/freshening.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target simple_value_approx.ml)
  (deps   ../raw-compiler/simple_value_approx.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target export_info.ml)
  (deps   ../raw-compiler/export_info.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target flambda_to_clambda.ml)
  (deps   ../raw-compiler/flambda_to_clambda.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target allocated_const.ml)
  (deps   ../raw-compiler/allocated_const.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target projection.ml)
  (deps   ../raw-compiler/projection.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target flambda.ml)
  (deps   ../raw-compiler/flambda.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target lambda.ml)
  (deps   ../raw-compiler/lambda.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target cmi_format.ml)
  (deps   ../raw-compiler/cmi_format.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target env.ml)
  (deps   ../raw-compiler/env.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target ctype.ml)
  (deps   ../raw-compiler/ctype.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target includecore.ml)
  (deps   ../raw-compiler/includecore.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target includemod.ml)
  (deps   ../raw-compiler/includemod.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target typetexp.ml)
  (deps   ../raw-compiler/typetexp.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target primitive.ml)
  (deps   ../raw-compiler/primitive.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target path.ml)
  (deps   ../raw-compiler/path.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target types.ml)
  (deps   ../raw-compiler/types.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target typedtree.ml)
  (deps   ../raw-compiler/typedtree.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target longident.ml)
  (deps   ../raw-compiler/longident.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target location.ml)
  (deps   ../raw-compiler/location.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target asttypes.ml)
  (deps   ../raw-compiler/asttypes.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target parsetree.ml)
  (deps   ../raw-compiler/parsetree.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))
