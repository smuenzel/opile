(library
  (name compiler_with_sexp)
  (libraries core ocaml-compiler-libs.optcomp ocaml-compiler-libs.common)
  (inline_tests)
  (preprocess (pps ppx_expect ppx_jane))
  )

(rule
  (target lexing_with_sexp.ml)
  (deps   ../raw-compiler/lexing.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target ident_with_sexp.ml)
  (deps   ../raw-compiler/ident.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target path_with_sexp.ml)
  (deps   ../raw-compiler/path.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target types_with_sexp.ml)
  (deps   ../raw-compiler/types.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target typedtree_with_sexp.ml)
  (deps   ../raw-compiler/typedtree.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target longident_with_sexp.ml)
  (deps   ../raw-compiler/longident.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target location_with_sexp.ml)
  (deps   ../raw-compiler/location.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target asttypes_with_sexp.ml)
  (deps   ../raw-compiler/asttypes.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))

(rule
  (target parsetree_with_sexp.ml)
  (deps   ../raw-compiler/parsetree.mli)
  (mode   promote)
  (action (with-stdout-to %{target} (run ../sexpify/sexpify.exe %{deps}))))
